{"version":3,"file":"index.683563d2.js","sources":["../../src/api/inout/index.js","../../src/routes/spot/inout/index.jsx"],"sourcesContent":["import req from \"../../util/request\"\r\n\r\nexport default {\r\n  getList: (params, cancelToken) => req.get('inout/list', { params, cancelToken }),\r\n};\r\n","import React from 'react';\r\nimport { Table, Card, Select } from 'antd';\r\nimport dayjs from 'dayjs';\r\n\r\nimport api from '../../../api/inout';\r\nimport useListPage from '../../../hook/useListPage';\r\nimport useSearchColumn from '../../../hook/useSearchColumn';\r\nimport IntlMessages from \"../../../util/IntlMessages\";\r\nimport { buildFilter, buildTimeRangeFilter } from '../../../components/Table/tableHelp';\r\n\r\nconst Status = {\r\n  0: 'normal',\r\n  1: 'abnormal',\r\n  2: 'error',\r\n};\r\n\r\nconst InoutType = {\r\n  0: 'driver',\r\n  1: 'visitor',\r\n  2: 'other',\r\n}\r\n\r\n/**@return {import('../../../components/tableHelp').buildDrodown} */\r\nconst buildEventSelect =\r\n  () =>\r\n    ({ selectedKeys, setSelectedKeys, confirm }) => {\r\n      return (\r\n        <Select\r\n          options={[{ label: \"IN\", value: \"IN\" }, { label: \"OUT\", value: \"OUT\" }]}\r\n          style={{ width: '100%' }}\r\n          value={selectedKeys}\r\n          onSelect={v => {\r\n            setSelectedKeys([v]);\r\n            confirm();\r\n          }}\r\n          placeholder='Click to select'\r\n        />\r\n      );\r\n    };\r\n\r\n/**@return {import('../../../components/tableHelp').buildDrodown} */\r\nconst buildStatusSelect =\r\n  () =>\r\n    ({ selectedKeys, setSelectedKeys, confirm }) => {\r\n      return (\r\n        <Select\r\n          options={[{ label: \"normal\", value: \"0\" }, { label: \"abnormal\", value: \"1\" }, { label: \"error\", value: \"2\" }]}\r\n          style={{ width: '100%' }}\r\n          value={selectedKeys}\r\n          onSelect={v => {\r\n            setSelectedKeys([v]);\r\n            confirm();\r\n          }}\r\n          placeholder='Click to select'\r\n        />\r\n      );\r\n    };\r\n\r\n/**@return {import('../../../components/tableHelp').buildDrodown} */\r\nconst buildTypeSelect =\r\n  () =>\r\n    ({ selectedKeys, setSelectedKeys, confirm }) => {\r\n      return (\r\n        <Select\r\n          options={[{ label: \"driver\", value: \"0\" }, { label: \"visitor\", value: \"1\" }, { label: \"other\", value: \"2\" }]}\r\n          style={{ width: '100%' }}\r\n          value={selectedKeys}\r\n          onSelect={v => {\r\n            setSelectedKeys([v]);\r\n            confirm();\r\n          }}\r\n          placeholder='Click to select'\r\n        />\r\n      );\r\n    };\r\n\r\nconst Inout = () => {\r\n  const { dataState, handleTableChange, cachedParams } = useListPage(api);\r\n\r\n  /**@type {import('antd/lib/table').ColumnsType} */\r\n  const columns = [\r\n    {\r\n      title: <IntlMessages id='inout.event' />,\r\n      dataIndex: 'event',\r\n      key: '~event',\r\n      filteredValue: cachedParams['~event'],\r\n      ...buildFilter(buildEventSelect()),\r\n    },\r\n    {\r\n      title: <IntlMessages id='inout.status' />,\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: t => Status[t],\r\n      filteredValue: cachedParams['status'],\r\n      ...buildFilter(buildStatusSelect()),\r\n    },\r\n    {\r\n      title: <IntlMessages id='inout.type' />,\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n      render: t => InoutType[t],\r\n      filteredValue: cachedParams['type'],\r\n      ...buildFilter(buildTypeSelect()),\r\n    },\r\n    {\r\n      title: <IntlMessages id='inout.licenceNumber' />,\r\n      dataIndex: 'licenceNumber',\r\n      key: '~licenceNumber',\r\n      filteredValue: cachedParams['~licenceNumber'],\r\n      ...useSearchColumn('licenceNumber'),\r\n    },\r\n    {\r\n      title: <IntlMessages id='inout.msg' />,\r\n      dataIndex: 'msg',\r\n      key: '~msg',\r\n      filteredValue: cachedParams['~msg'],\r\n      ...useSearchColumn('msg'),\r\n    },\r\n    {\r\n      title: <IntlMessages id='inout.scanningTime' />,\r\n      dataIndex: 'scanningTime',\r\n      key: '#scanningTime',\r\n      sorter: true,\r\n      sortOrder: cachedParams[\"sort\"]?.scanningTime,\r\n      render: t => dayjs(t).format('YYYY-MM-DD HH:mm'),\r\n      filteredValue: cachedParams['#scanningTime'],\r\n      ...buildTimeRangeFilter(),\r\n    },\r\n    {\r\n      title: <IntlMessages id='inout.passingTime' />,\r\n      dataIndex: 'passingTime',\r\n      key: '#passingTime',\r\n      sorter: true,\r\n      sortOrder: cachedParams[\"sort\"]?.passingTime,\r\n      render: t => dayjs(t).format('YYYY-MM-DD HH:mm'),\r\n      filteredValue: cachedParams['#passingTime'],\r\n      ...buildTimeRangeFilter(),\r\n    },\r\n    {\r\n      title: <IntlMessages id='inout.driver' />,\r\n      dataIndex: 'permit',\r\n      render: permit => {\r\n        if (permit && permit.type === 1) {\r\n          return permit.admin.driverName\r\n        }\r\n      }\r\n    },\r\n  ];\r\n\r\n  return <Card title={<IntlMessages id='table.list' values={{ menu: 'In Out' }} />}>\r\n    <Table\r\n      {...dataState}\r\n      className=\"gx-table-responsive\"\r\n      columns={columns}\r\n      rowKey='_id'\r\n      onChange={handleTableChange}\r\n    />\r\n  </Card>\r\n}\r\n\r\nexport default Inout;"],"names":["getList","params","cancelToken","req","get","Status","InoutType","buildEventSelect","selectedKeys","setSelectedKeys","confirm","label","value","width","v","buildStatusSelect","buildTypeSelect","Inout","dataState","handleTableChange","cachedParams","useListPage","api","columns","title","dataIndex","key","filteredValue","buildFilter","render","t","useSearchColumn","sorter","sortOrder","scanningTime","dayjs","format","buildTimeRangeFilter","passingTime","permit","type","admin","driverName","menu"],"mappings":"0vBAEA,MAAe,CACbA,QAAS,CAACC,EAAQC,IAAgBC,EAAIC,IAAI,aAAc,CAAEH,SAAQC,iBCOpE,KAAMG,GAAS,GACV,WACA,aACA,SAGCC,EAAY,GACb,WACA,YACA,SAICC,EACJ,IACE,CAAC,CAAEC,eAAcC,kBAAiBC,6BAE7B,EAAD,CACE,QAAS,CAAC,CAAEC,MAAO,KAAMC,MAAO,MAAQ,CAAED,MAAO,MAAOC,MAAO,QAC/D,MAAO,CAAEC,MAAO,QAChB,MAAOL,EACP,SAAUM,GAAK,GACG,CAACA,SAGnB,YAAY,oBAMhBC,EACJ,IACE,CAAC,CAAEP,eAAcC,kBAAiBC,6BAE7B,EAAD,CACE,QAAS,CAAC,CAAEC,MAAO,SAAUC,MAAO,KAAO,CAAED,MAAO,WAAYC,MAAO,KAAO,CAAED,MAAO,QAASC,MAAO,MACvG,MAAO,CAAEC,MAAO,QAChB,MAAOL,EACP,SAAUM,GAAK,GACG,CAACA,SAGnB,YAAY,oBAMhBE,EACJ,IACE,CAAC,CAAER,eAAcC,kBAAiBC,6BAE7B,EAAD,CACE,QAAS,CAAC,CAAEC,MAAO,SAAUC,MAAO,KAAO,CAAED,MAAO,UAAWC,MAAO,KAAO,CAAED,MAAO,QAASC,MAAO,MACtG,MAAO,CAAEC,MAAO,QAChB,MAAOL,EACP,SAAUM,GAAK,GACG,CAACA,SAGnB,YAAY,oBAKhBG,EAAQ,IAAM,cACZ,CAAEC,YAAWC,oBAAmBC,gBAAiBC,EAAYC,GAG7DC,EAAU,CACd,GACEC,sBAAQ,EAAD,CAAc,GAAG,gBACxBC,UAAW,QACXC,IAAK,SACLC,cAAeP,EAAa,WACzBQ,EAAYrB,MAEjB,GACEiB,sBAAQ,EAAD,CAAc,GAAG,iBACxBC,UAAW,SACXC,IAAK,SACLG,OAAQC,GAAKzB,EAAOyB,GACpBH,cAAeP,EAAa,QACzBQ,EAAYb,MAEjB,GACES,sBAAQ,EAAD,CAAc,GAAG,eACxBC,UAAW,OACXC,IAAK,OACLG,OAAQC,GAAKxB,EAAUwB,GACvBH,cAAeP,EAAa,MACzBQ,EAAYZ,MAEjB,GACEQ,sBAAQ,EAAD,CAAc,GAAG,wBACxBC,UAAW,gBACXC,IAAK,iBACLC,cAAeP,EAAa,mBACzBW,EAAgB,kBAErB,GACEP,sBAAQ,EAAD,CAAc,GAAG,cACxBC,UAAW,MACXC,IAAK,OACLC,cAAeP,EAAa,SACzBW,EAAgB,QAErB,GACEP,sBAAQ,EAAD,CAAc,GAAG,uBACxBC,UAAW,eACXC,IAAK,gBACLM,OAAQ,GACRC,UAAWb,KAAa,OAAbA,cAAsBc,aACjCL,OAAQC,GAAKK,EAAML,GAAGM,OAAO,oBAC7BT,cAAeP,EAAa,kBACzBiB,KAEL,GACEb,sBAAQ,EAAD,CAAc,GAAG,sBACxBC,UAAW,cACXC,IAAK,eACLM,OAAQ,GACRC,UAAWb,KAAa,OAAbA,cAAsBkB,YACjCT,OAAQC,GAAKK,EAAML,GAAGM,OAAO,oBAC7BT,cAAeP,EAAa,iBACzBiB,KAEL,CACEb,sBAAQ,EAAD,CAAc,GAAG,iBACxBC,UAAW,SACXI,OAAQU,GAAU,IACZA,GAAUA,EAAOC,OAAS,QACrBD,GAAOE,MAAMC,qCAMpB,EAAD,CAAM,sBAAQ,EAAD,CAAc,GAAG,aAAa,OAAQ,CAAEC,KAAM,6BAC/D,EAAD,OACMzB,GADN,CAEE,UAAU,sBACV,UACA,OAAO,MACP,SAAUC"}