{"version":3,"file":"index.98c1f8f6.js","sources":["../../src/routes/role/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Table, Card, message } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\nimport dayjs from 'dayjs';\r\n\r\nimport { showAlertSnackbar } from '../../appRedux/actions/ui';\r\nimport api from '../../api/role';\r\nimport IntlMessages from \"../../util/IntlMessages\";\r\nimport { AddBtn, DangerBtn, ModifyBtn } from '../../components/styled/operateBtns';\r\n\r\nconst Role = () => {\r\n  const [roles, setRoles] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleOne = id => async () => {\r\n    let res = await api.dele(id);\r\n    if (res.code) return message.error(res.msg);\r\n    message.success(res.msg);\r\n\r\n    getData();\r\n  };\r\n  const getData = async () => {\r\n    let res = await api.getAll();\r\n    if (res.code) {\r\n      return dispatch(showAlertSnackbar('error',\r\n        res.msg,\r\n        'Error',\r\n        4.5,\r\n        null));\r\n    }\r\n    setRoles(res.data);\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: <IntlMessages id='table.operation' />,\r\n      dataIndex: 'sort',\r\n      key: 'operation',\r\n      render: (_, data) => {\r\n        return (\r\n          <div style={{ display: 'flex' }}>\r\n            <ModifyBtn carry={{ editData: data }} />\r\n            {/* <StyledLink to={{ pathname: 'assign', state: { data } }}>\r\n              <PartitionOutlined />\r\n            </StyledLink> */}\r\n            <DangerBtn onConfirm={deleOne(data._id)} />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: <IntlMessages id='role.name' />,\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: <IntlMessages id='role.menuIds' />,\r\n      align: 'center',\r\n      dataIndex: 'menuIds',\r\n      key: 'menuIds',\r\n      render: v => (v.length ? v.length : <IntlMessages id='role.all' />),\r\n    },\r\n    {\r\n      title: <IntlMessages id='role.addTime' />,\r\n      dataIndex: 'addTime',\r\n      key: 'addTime',\r\n      render: t => dayjs(t).format('YYYY-MM-DD HH:mm:ss'),\r\n    },\r\n  ];\r\n\r\n  return <Card title={<IntlMessages id='table.list' values={{ menu: 'Role' }} />}>\r\n    <AddBtn />\r\n    <Table\r\n      className=\"gx-table-responsive\"\r\n      columns={columns}\r\n      dataSource={roles}\r\n      rowKey='_id'\r\n    />\r\n  </Card>\r\n}\r\n\r\nexport default Role;"],"names":["Role","roles","setRoles","useState","dispatch","useDispatch","deleOne","id","res","api","dele","code","message","error","msg","success","getData","getAll","showAlertSnackbar","data","columns","title","dataIndex","key","render","_","display","editData","_id","align","v","length","t","dayjs","format","menu"],"mappings":"gWAUMA,GAAO,IAAM,MACX,CAACC,EAAOC,GAAYC,mBAAS,IAC7BC,EAAWC,IAEXC,EAAUC,GAAM,SAAY,IAC5BC,GAAM,KAAMC,GAAIC,KAAKH,MACrBC,EAAIG,WAAaC,GAAQC,MAAML,EAAIM,OAC/BC,QAAQP,EAAIM,UAIhBE,EAAU,SAAY,IACtBR,GAAM,KAAMC,GAAIQ,YAChBT,EAAIG,WACCP,GAASc,EAAkB,QAChCV,EAAIM,IACJ,QACA,IACA,SAEKN,EAAIW,2BAEL,IAAM,MAEb,SAEGC,GAAU,CACd,CACEC,sBAAQ,EAAD,CAAc,GAAG,oBACxBC,UAAW,OACXC,IAAK,YACLC,OAAQ,CAACC,EAAGN,oBAEP,MAAD,CAAK,MAAO,CAAEO,QAAS,yBACpB,EAAD,CAAW,MAAO,CAAEC,SAAUR,qBAI7B,EAAD,CAAW,UAAWb,EAAQa,EAAKS,SAK3C,CACEP,sBAAQ,EAAD,CAAc,GAAG,cACxBC,UAAW,OACXC,IAAK,QAEP,CACEF,sBAAQ,EAAD,CAAc,GAAG,iBACxBQ,MAAO,SACPP,UAAW,UACXC,IAAK,UACLC,OAAQM,GAAMA,EAAEC,OAASD,EAAEC,uBAAU,EAAD,CAAc,GAAG,cAEvD,CACEV,sBAAQ,EAAD,CAAc,GAAG,iBACxBC,UAAW,UACXC,IAAK,UACLC,OAAQQ,GAAKC,EAAMD,GAAGE,OAAO,gDAIzB,EAAD,CAAM,sBAAQ,EAAD,CAAc,GAAG,aAAa,OAAQ,CAAEC,KAAM,2BAC/D,EAAD,sBACC,EAAD,CACE,UAAU,sBACV,UACA,WAAYlC,EACZ,OAAO"}