{"version":3,"file":"modify.25711d90.js","sources":["../../src/routes/role/modify.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { message, Form, Input, Button, Divider, Card, Checkbox } from 'antd';\r\nimport { injectIntl } from \"react-intl\";\r\nimport styled from \"styled-components\"\r\n\r\nimport api from '../../api/role';\r\nimport menuApi from '../../api/menu';\r\n\r\nconst Item = Form.Item;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 12 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { span: 8, offset: 4 },\r\n};\r\n\r\nconst CheckboxGroup = styled(Checkbox.Group)`\r\n    padding-left: 23px;\r\n    &>label{\r\n        margin-right:20px;\r\n        margin-top:5px\r\n    }\r\n`;\r\nconst Expand = styled.div`\r\n    flex:1;\r\n    margin: 24px;\r\n    &>div+div{\r\n        margin-top:15px;\r\n    }\r\n`\r\n\r\nconst extra = function (allChildren, children) {\r\n  let checkList = []\r\n  children.forEach(c => {\r\n    let child = allChildren.find(f => f._id === c);\r\n    if (!child) return\r\n    checkList.push(child.name)\r\n  })\r\n  let curLen = checkList.length,\r\n    allLen = allChildren.length,\r\n    indeterminate = curLen < allLen,\r\n    checkedAll = curLen === allLen,\r\n    cur = { checkedAll, checkList, indeterminate };\r\n  return cur\r\n}\r\n\r\n/**\r\n * \r\n * @param {menuIds} ids \r\n * @param {Route[]} routes \r\n */\r\nconst extraDefalutValue = (ids = [], routes = []) => {\r\n  let checked = new Map()\r\n  const parent = routes.filter(f => ids.includes(f._id) && !f.pid);\r\n  parent.forEach(item => {\r\n    let allChildren = routes.filter(v => v.pid === item._id);\r\n    let chidren = ids.filter(f => routes.find(r => f === r._id && r.pid === item._id));\r\n    let checkState = extra(allChildren, chidren);\r\n    checked.set(item._id, checkState)\r\n  })\r\n  return checked;\r\n}\r\n\r\nconst Modify = ({ location, history, intl }) => {\r\n  const { editData } = location.state || {};\r\n  const isEdit = editData !== undefined;\r\n  const [form] = Form.useForm();\r\n  const [menus, setMenus] = useState([]);\r\n  const [checkStateMap, setCheckState] = useState()\r\n\r\n  useEffect(() => {\r\n    const initMenus = async () => {\r\n      let res = await menuApi.getAll();\r\n      if (res.code) return message.error(res.msg);\r\n      const defaulState = extraDefalutValue(isEdit ? editData.menuIds : [], res.data);\r\n      setCheckState(defaulState)\r\n      setMenus(res.data);\r\n    };\r\n    initMenus();\r\n    if (isEdit) {\r\n      form.setFieldsValue(editData);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const allCheck = (route, children) => ({ target: { checked } }) => {\r\n    let cur = checked\r\n      ? {\r\n        checkedAll: true,\r\n        checkList: children.map(c => c.name),\r\n        indeterminate: false\r\n      }\r\n      : { checkedAll: false, checkList: [], indeterminate: false };\r\n\r\n    if (checked) {\r\n      checkStateMap.set(route._id, cur)\r\n    } else {\r\n      checkStateMap.delete(route._id)\r\n    }\r\n\r\n    setCheckState(new Map(checkStateMap))\r\n  }\r\n\r\n  const singleCheck = (route, children) => (values) => {\r\n    let checkList = values,\r\n      curLen = checkList.length,\r\n      allLen = children.length,\r\n      indeterminate = curLen < allLen,\r\n      checkedAll = curLen === allLen,\r\n      cur = { checkedAll, checkList, indeterminate };\r\n    if (!curLen && indeterminate) {\r\n      checkStateMap.delete(route._id)\r\n    } else {\r\n      checkStateMap.set(route._id, cur)\r\n    }\r\n\r\n    setCheckState(new Map(checkStateMap))\r\n  }\r\n\r\n  const buildCheckbox = route => {\r\n    let {\r\n      checkedAll = false,\r\n      checkList = [],\r\n      indeterminate = false\r\n    } = checkStateMap.get(route._id) || {};\r\n\r\n    const children = menus.filter(f => f.pid === route._id);\r\n\r\n    return (\r\n      <div key={route._id} >\r\n        <Checkbox\r\n          indeterminate={indeterminate}\r\n          onChange={allCheck(route, children)}\r\n          checked={checkedAll}\r\n        >{route.name}</Checkbox>\r\n        <div></div>\r\n        <CheckboxGroup\r\n          options={children.map(c => c.name)}\r\n          value={checkList}\r\n          onChange={singleCheck(route, children)}\r\n        ></CheckboxGroup>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const onFinish = async values => {\r\n    let menuIds = [];\r\n    checkStateMap.forEach(({ checkList }, id) => {\r\n      let childrenIds = checkList.map(v => menus.find(c => c.name === v)._id)\r\n      menuIds.push(id)\r\n      return menuIds.push(...childrenIds);\r\n    })\r\n    let res = isEdit ? await api.edit(editData._id, { ...values, menuIds }) : await api.add({ ...values, menuIds });\r\n    if (res.code) return message.error(res.msg);\r\n    message.success(res.msg);\r\n    history.goBack();\r\n  };\r\n\r\n  return (<Card className=\"gx-card\" title={intl.formatMessage({ id: 'role.form' }, { control: isEdit ? \"Edit\" : \"Create\" })}>\r\n    <Form {...layout} form={form} name='role' onFinish={onFinish}>\r\n      <Item label={intl.formatMessage({ id: 'role.name' })} name='name' rules={[{ required: true }]}>\r\n        <Input />\r\n      </Item>\r\n      <Divider orientation=\"left\">{intl.formatMessage({ id: 'role.assign' })}</Divider>\r\n      <Expand {...layout}>\r\n        {menus.filter(f => !f.pid).map(buildCheckbox)}\r\n      </Expand>\r\n      <Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          {intl.formatMessage({ id: 'buttons.submit' })}\r\n        </Button>\r\n      </Item>\r\n    </Form>\r\n  </Card>)\r\n}\r\n\r\nexport default injectIntl(Modify);"],"names":["Item","Form","layout","labelCol","span","wrapperCol","tailLayout","offset","CheckboxGroup","styled","Checkbox","Group","Expand","div","extra","allChildren","children","checkList","forEach","c","child","find","f","_id","push","name","curLen","length","allLen","indeterminate","checkedAll","extraDefalutValue","ids","routes","checked","Map","filter","includes","pid","item","v","chidren","r","checkState","set","Modify","location","history","intl","editData","state","isEdit","undefined","form","useForm","menus","setMenus","useState","checkStateMap","setCheckState","res","menuApi","getAll","code","message","error","msg","defaulState","menuIds","data","setFieldsValue","allCheck","route","target","cur","map","delete","singleCheck","values","buildCheckbox","get","onFinish","id","childrenIds","api","edit","add","success","goBack","formatMessage","control","required","injectIntl"],"mappings":"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"}