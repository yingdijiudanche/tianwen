{"version":3,"file":"useListPage.af8924c6.js","sources":["../../src/hook/useParamsCache.js","../../src/hook/useAutoCancel.js","../../src/hook/useListPage.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n/**\n * 获取路由上代表业务主体的那部分 如/product/index 主体为product\n * @param {String} url 路径\n */\n// const getScope = (url = '') => url.split('/').slice(1, -1).join('/')\nconst getScope = (url = '') => url.split('/')[1];\n\n/** 通过监听路由实现参数自动缓存，自动清除缓存 */\nexport default function () {\n  const history = useHistory();\n  const cacheRef = useRef();\n\n  useEffect(() => {\n    const { pathname } = history.location;\n    let before = sessionStorage.getItem(pathname);\n    cacheRef.current = before ? JSON.parse(before) : null;\n    const scope = getScope(pathname);\n\n    const unListen = history.listen((destination, type) => {\n      if (type === 'PUSH') {\n        sessionStorage.setItem(pathname, JSON.stringify(cacheRef.current));\n      }\n    });\n\n    return () => {\n      unListen();\n      let curscope = getScope(history.location.pathname);\n      if (curscope === scope) return;\n      sessionStorage.removeItem(pathname);\n      // console.log('remove', cacheRef.current)\n    };\n    //eslint-disable-next-line\n  }, []);\n  return cacheRef;\n}\n","import Axios from 'axios';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nconst CancelMsg = 'canceled';\r\nconst isCanceled = msg => msg === CancelMsg;\r\n/**\r\n * 创建一个自动取消的请求函数\r\n *\r\n * (cancelToken,isCanceled),会通过参数传入 ```fn```\r\n *\r\n * 第三个参数开始，是你调用返回的函数时 传入的参数\r\n * @param {(\r\n * cancelToken:import('axios').CancelToken,\r\n * isCanceled:(msg:string)=>boolean,\r\n * ...args)=>Promise} fn\r\n */\r\nexport default function useAutoCancel(fn) {\r\n  /**@type {import('react').MutableRefObject<import('axios').CancelTokenSource>} */\r\n  const cancelTokenRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (cancelTokenRef.current) {\r\n        cancelTokenRef.current.cancel(CancelMsg);\r\n      }\r\n    }; // 防止快速轉頁時報錯\r\n  }, []);\r\n\r\n  const fetchDatas = async (...args) => {\r\n    if (cancelTokenRef.current === null) {\r\n      cancelTokenRef.current = Axios.CancelToken.source();\r\n    } else {\r\n      cancelTokenRef.current.cancel();\r\n      cancelTokenRef.current = Axios.CancelToken.source();\r\n    }\r\n\r\n    return fn.call(fn, cancelTokenRef.current.token, isCanceled, ...args);\r\n  };\r\n\r\n  return fetchDatas;\r\n}\r\n","import { message } from 'antd';\r\nimport { useState, useEffect } from 'react';\r\nimport useParamsCache from './useParamsCache';\r\nimport useAutoCancel from './useAutoCancel';\r\n\r\n/**\r\n * 过滤total，部分属性名更换\r\n * @param {CacheRefShape} params\r\n * @returns {SendParams}\r\n */\r\nexport const simplify = function (params = {}) {\r\n  let { total, current, pageSize, ...rest } = params;\r\n  rest.page = current;\r\n  rest.limit = pageSize;\r\n  return rest;\r\n};\r\n\r\nconst genDefoState = function (pageSize = 10) {\r\n  return {\r\n    loading: false,\r\n    pagination: { current: 1, pageSize, total: 0 },\r\n    dataSource: [],\r\n  };\r\n};\r\n\r\nconst remakeState = function (res) {\r\n  let { pageSize, current, total, data } = res;\r\n  return {\r\n    loading: false,\r\n    pagination: { current, pageSize, total },\r\n    dataSource: data,\r\n  };\r\n};\r\n\r\n/**@type {ConfigOfUseListPage} */\r\nconst defaultConfig = { staticParams: {}, baseParams: {} };\r\n\r\n/**\r\n * 一个为分页展示定制的hook，包含 获取列表数据，删除一条数据，筛选数据\r\n * @param {{getList:(params,cancelToken?)=>Promise,dele:(id)=>Promise}} api\r\n * @param {ConfigOfUseListPage} config 如果有路由参数，放进staticParams\r\n */\r\nexport default function useListPage(api, { pageSize, staticParams, baseParams } = defaultConfig) {\r\n  const [dataState, setDataState] = useState(() => genDefoState(pageSize));\r\n\r\n  /**@type {import('react').MutableRefObject<CacheRefShape>} */\r\n  const cacheRef = useParamsCache();\r\n\r\n  const fetchDatas = useAutoCancel(async (cancelToken, isCanceled, params) => {\r\n    setDataState(s => ({ ...s, loading: true }));\r\n\r\n    let res = await api.getList(simplify(params), cancelToken);\r\n\r\n    if (res.code) {\r\n      if (isCanceled(res.msg)) return;\r\n      message.error(res.msg);\r\n      return;\r\n    }\r\n\r\n    cacheRef.current = params;\r\n    setDataState(remakeState(res));\r\n  });\r\n\r\n  useEffect(() => {\r\n    let params = cacheRef.current ? cacheRef.current : dataState.pagination;\r\n    fetchDatas({ ...baseParams, ...params, ...staticParams });\r\n  }, []);\r\n\r\n  /**\r\n   * @param {import('antd/lib/pagination').PaginationConfig} pagination\r\n   * @param {{[x:string]:any}} filters\r\n   * @param {import('antd/lib/table/interface').SorterResult} sorts\r\n   */\r\n  const handleTableChange = ({ current, pageSize }, filters, sorts) => {\r\n    let lastParams = cacheRef.current || {};\r\n    let params = {\r\n      ...lastParams,\r\n      current: current === 0 ? 1 : current,\r\n      pageSize,\r\n      ...filters,\r\n    };\r\n    params.sort = sorts.order ? { [sorts.field]: sorts.order } : undefined;\r\n    fetchDatas({ ...params, ...staticParams });\r\n  };\r\n\r\n  const deleOne = id => async () => {\r\n    let res = await api.dele(id);\r\n    if (res.code) return message.error(res.msg);\r\n    message.success(res.msg);\r\n    if (dataState.dataSource.length === 1) {\r\n      cacheRef.current.current = Math.max(cacheRef.current.current - 1, 1);\r\n    }\r\n    fetchDatas(cacheRef.current);\r\n  };\r\n\r\n  const reload = () => {\r\n    fetchDatas(cacheRef.current);\r\n  };\r\n\r\n  return {\r\n    dataState,\r\n    handleTableChange,\r\n    deleOne,\r\n    cachedParams: cacheRef.current || {},\r\n    reload,\r\n  };\r\n}\r\n\r\n/**\r\n * @typedef {object} ConfigOfUseListPage\r\n * @property {number} pageSize\r\n * @property {ParamsShape} baseParams 初始参数，会被筛选条件或者缓存覆盖\r\n * @property {Object.<string,AcceptableValue>} staticParams 静态参数，不会被筛选条件或者缓存覆盖,不包含sort\r\n */\r\n\r\n/**\r\n * @typedef {object} APIShape\r\n * @property {(params,cancelToken)=>Promise} getList 想支持请求取消，就接收第二个参数\r\n * @property {(id)=>Promise} dele\r\n */\r\n\r\n/**\r\n * @typedef {object} Pagination\r\n * @property {number} current\r\n * @property {number} pageSize\r\n * @property {number} total\r\n *\r\n */\r\n\r\n/**\r\n * @typedef {string|number|string[]|number[]} AcceptableValue\r\n *\r\n * @typedef {{sort?:{[x:string]:'descend'|'ascend'}}} SortParam\r\n *\r\n * @typedef {{[x:string]:AcceptableValue} & SortParam} ParamsShape\r\n *\r\n * @typedef {Pagination & ParamsShape } CacheRefShape\r\n *\r\n * @typedef {{page:number,limit:number} & ParamsShape} SendParams\r\n *\r\n */\r\n"],"names":["getScope","url","split","history","useHistory","cacheRef","useRef","useEffect","pathname","location","before","sessionStorage","getItem","current","JSON","parse","scope","unListen","listen","destination","type","setItem","stringify","curscope","removeItem","CancelMsg","isCanceled","msg","fn","cancelTokenRef","cancel","args","Axios","CancelToken","source","call","token","simplify","params","total","pageSize","rest","page","limit","genDefoState","loading","pagination","dataSource","remakeState","res","data","defaultConfig","staticParams","baseParams","api","dataState","setDataState","useState","useParamsCache","fetchDatas","useAutoCancel","cancelToken","s","getList","code","message","error","handleTableChange","filters","sorts","lastParams","sort","order","field","undefined","deleOne","id","dele","success","length","Math","max","reload","cachedParams"],"mappings":"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"}